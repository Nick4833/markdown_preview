import Head from "next/head";
import styles from "@/styles/Home.module.css";

import { useRef, useState, useEffect } from "react";
import ReactMarkdown from "react-markdown";
import Editor from "@monaco-editor/react";
import remarkGfm from "remark-gfm";
import { FiCopy, FiGithub } from "react-icons/fi";
import { FcCheckmark } from "react-icons/fc";

export default function Home() {
  const [marked, setMarked] = useState("");
  const [copied, setCopied] = useState(false);
  const initialRender = useRef(true);

  useEffect(() => {
    const savedMarked = localStorage.getItem("savedMarked") || "";
    setMarked(savedMarked);
  }, []);

  useEffect(() => {
    if (initialRender.current) {
      initialRender.current = false;
      return;
    }
    window.localStorage.setItem("savedMarked", marked);
  }, [marked]);

  function handleEditorChange(value: any) {
    setMarked(value);
  }

  function copyMarkdown(markDown: string) {
    navigator.clipboard.writeText(markDown);
    setCopied(true);
    setTimeout(() => setCopied(false), 2000);
  }
  return (
    <>
      <Head>
        <title>MarkDown Preview</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.card}>
          <div className={styles.marked}>
            <div className={styles.markedInfo}>
              <h2>Mark Down</h2>
              <code>Changes are automatically saved.</code>
            </div>
            <Editor
              defaultLanguage="markdown"
              defaultValue={marked}
              theme="vs-dark"
              options={{
                formatOnType: true,
                padding: { top: 25 },
                wordWrap: "on",
              }}
              onChange={handleEditorChange}
            />
          </div>
          <div>
            <h2>HTML</h2>
            <div className={styles.preview}>
              <ReactMarkdown
                remarkPlugins={[remarkGfm]}
                className={styles.previewText}
              >
                {marked}
              </ReactMarkdown>
            </div>
            <div className="button-group">
              <a
                href="https://www.github.com"
                target="_blank"
                rel="noreferrer"
                className="git-button"
              >
                <FiGithub />
              </a>
              <button
                onClick={() => copyMarkdown(marked)}
                className="copy-button"
              >
                {copied ? <FcCheckmark /> : <FiCopy />}
              </button>
            </div>
          </div>
        </div>
      </main>
    </>
  );
}
